'use client';

import { useState } from 'react';

type Article = {
  title: string;
  author: string;
  date: string;
  url: string;
  cover: string;
  reason: string;
  summary: string[];
};

type Props = {
  data: {
    the_date: string;
    kind: string;
    items: Article[];
  };
};

// 翻译字典
const translations = {
  zh: {
    weeklyTitle: '当周精选',
    dailyTitle: '今日精选',
    spotlight: '本周焦点',
    issue: '第',
    issueNum: '期',
    wordsBy: '作者',
    readMore: '阅读原文',
    today: '今日推荐',
    archive: '历史归档',
    about: '关于',
    footerAbout: '关于本站：由 n8n + GPT + Supabase 自动生成的 AI/科技 Substack 精选。',
    footerSource: '数据来源：Substack · 封面：Microlink API · 部署：Vercel',
  },
  en: {
    weeklyTitle: 'Weekly Picks',
    dailyTitle: "Today's Picks",
    spotlight: 'Spotlight',
    issue: 'Issue',
    issueNum: '',
    wordsBy: 'Words by',
    readMore: 'Read more →',
    today: 'Today',
    archive: 'Archive',
    about: 'About',
    footerAbout: 'About: AI/Tech Substack curations automatically generated by n8n + GPT + Supabase.',
    footerSource: 'Source: Substack · Cover: Microlink API · Hosted: Vercel',
  },
};

export default function ArticleList({ data }: Props) {
  const [lang, setLang] = useState<'zh' | 'en'>('en');
  const t = translations[lang];
  const items = data.items;

  // 统一使用 Cormorant SC 字体
  const getFont = () => 'var(--font-cormorant-sc)';

  return (
    <div style={{ backgroundColor: '#F5F4F0', minHeight: '100vh', position: 'relative', overflow: 'hidden' }}>
      {/* Header */}
      <header 
        className="mx-auto max-w-7xl px-6 py-8 flex items-center justify-between relative"
        style={{ borderBottom: '1px solid #E5E3DD', zIndex: 1 }}
      >
        <div 
          className="text-5xl font-medium" 
          style={{ 
            fontFamily: getFont(), 
            color: '#1A1A1A',
            letterSpacing: '-0.02em'
          }}
        >
          Substack Daily
        </div>
        <div className="flex items-center gap-3">
          <button
            onClick={() => alert('历史精选功能即将推出')}
            className="px-5 py-2 rounded border text-sm font-medium transition-all duration-200 hover:bg-gray-100"
            style={{
              borderColor: '#1A1A1A',
              color: '#1A1A1A',
              height: '38px',
              minWidth: '100px',
            }}
          >
            {lang === 'zh' ? '历史精选' : 'Archive'}
          </button>
          <button
            onClick={() => window.open('https://substack.com', '_blank')}
            className="px-5 py-2 rounded text-sm font-medium transition-all duration-200 hover:opacity-90"
            style={{
              backgroundColor: '#1A1A1A',
              color: 'white',
              height: '38px',
              minWidth: '100px',
            }}
          >
            Subscribe
          </button>
          <button
            onClick={() => setLang(lang === 'zh' ? 'en' : 'zh')}
            className="px-5 py-2 rounded border text-sm font-medium transition-all duration-200 hover:bg-black hover:text-white"
            style={{
              borderColor: '#1A1A1A',
              color: '#1A1A1A',
              height: '38px',
              minWidth: '60px',
            }}
          >
            {lang === 'zh' ? 'EN' : '中'}
          </button>
        </div>
      </header>

      {/* Main Content */}
      <main className="mx-auto max-w-7xl px-6 py-12">
        {items.length > 0 && (
          <div className="space-y-8">
            {/* Featured Article - Horizontal Layout (Left Image, Right Text) */}
            <article 
              className="flex flex-col lg:flex-row gap-0 overflow-hidden transition-transform duration-300 hover:scale-[1.01]"
              style={{
                backgroundColor: 'white',
                border: '1px solid #E5E3DD',
              }}
            >
              {/* Left Side - Large Image */}
              {items[0].cover && (
                <div className="lg:w-1/2">
                  <img
                    alt={items[0].title}
                    className="w-full h-full"
                    style={{ 
                      aspectRatio: '4/3',
                      objectFit: 'cover'
                    }}
                    src={items[0].cover}
                  />
                </div>
              )}

              {/* Right Side - Text Content */}
              <div className="lg:w-1/2 p-12 flex flex-col justify-center" style={{ color: '#1A1A1A' }}>
                <div className="mb-6 flex items-center gap-3">
                  <span 
                    className="text-xs px-3 py-1 rounded"
                    style={{
                      backgroundColor: '#F5F4F0',
                      color: '#666',
                    }}
                  >
                    {t.spotlight}
                  </span>
                  <span 
                    className="text-xs px-3 py-1 rounded font-medium"
                    style={{
                      backgroundColor: '#1A1A1A',
                      color: 'white',
                    }}
                  >
                    {lang === 'zh' ? '第十期精选' : 'Issue #10'}
                  </span>
                </div>

                <h2 
                  className="text-4xl mb-4 leading-tight font-light italic"
                  style={{ 
                    fontFamily: getFont(),
                  }}
                >
                  {items[0].title}
                </h2>
                
                <p 
                  className="text-sm mb-6"
                  style={{ fontFamily: getFont(), color: '#666' }}
                >
                  By {items[0].author} · {items[0].date}
                </p>

                <p 
                  className="text-base mb-6 leading-relaxed"
                  style={{ fontFamily: getFont(), color: '#444' }}
                >
                  {items[0].reason}
                </p>

                {/* 三个要点 */}
                {items[0].summary && items[0].summary.length > 0 && (
                  <ul className="space-y-2" style={{ fontFamily: getFont() }}>
                    {(Array.isArray(items[0].summary) ? items[0].summary : [items[0].summary]).slice(0, 3).map((point, i) => (
                      <li key={i} className="text-sm flex items-start" style={{ color: '#666' }}>
                        <span className="mr-2">•</span>
                        <span>{point}</span>
                      </li>
                    ))}
                  </ul>
                )}
              </div>
            </article>

            {/* Grid Cards - 4 Cards in a Row */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              {items.slice(1, 5).map((item, idx) => (
                <article 
                  key={idx}
                  className="overflow-hidden transition-transform duration-300 hover:scale-[1.02] flex flex-col"
                  style={{
                    backgroundColor: 'white',
                    border: '1px solid #E5E3DD',
                  }}
                >
                  {/* Cover Image */}
                  {item.cover && (
                    <div className="w-full">
                      <img
                        alt={item.title}
                        className="w-full"
                        style={{ 
                          aspectRatio: '4/3',
                          objectFit: 'cover'
                        }}
                        src={item.cover}
                      />
                    </div>
                  )}

                  <div className="p-6 flex flex-col flex-grow">
                    <h3 
                      className="text-lg mb-3 leading-tight font-medium"
                      style={{ 
                        fontFamily: getFont(),
                        color: '#1A1A1A',
                      }}
                    >
                      {item.title}
                    </h3>
                  
                    <p 
                      className="text-xs mb-4"
                      style={{ 
                        color: '#999',
                        fontFamily: getFont()
                      }}
                    >
                      By {item.author} · {item.date}
                    </p>

                    <p 
                      className="text-sm mb-4 leading-relaxed"
                      style={{ 
                        color: '#666',
                        fontFamily: getFont()
                      }}
                    >
                      {item.reason}
                    </p>

                    {/* 三个要点 */}
                    {item.summary && item.summary.length > 0 && (
                      <ul className="space-y-1" style={{ fontFamily: getFont() }}>
                        {(Array.isArray(item.summary) ? item.summary : [item.summary]).slice(0, 3).map((point, i) => (
                          <li key={i} className="text-xs flex items-start" style={{ color: '#666' }}>
                            <span className="mr-1.5">•</span>
                            <span>{point}</span>
                          </li>
                        ))}
                      </ul>
                    )}
                  </div>
                </article>
              ))}
            </div>
          </div>
        )}
      </main>

      {/* Footer */}
      <footer 
        className="mx-auto max-w-7xl px-6 py-12 text-sm"
        style={{ 
          color: '#666',
          borderTop: '1px solid #E5E3DD'
        }}
      >
        <p className="mb-2">{t.footerAbout}</p>
        <p>{t.footerSource}</p>
      </footer>
    </div>
  );
}

